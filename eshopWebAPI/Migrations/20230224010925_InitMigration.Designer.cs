// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eshopWebAPI.Data;

#nullable disable

namespace eshopWebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230224010925_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eshopWebAPI.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("deliveredAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDelivered")
                        .HasColumnType("bit");

                    b.Property<bool>("isPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("paidAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("paymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentResult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("shippingPrice")
                        .HasColumnType("float");

                    b.Property<double>("taxPrice")
                        .HasColumnType("float");

                    b.Property<double>("totalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            UserId = "1",
                            deliveredAt = new DateTime(2023, 2, 24, 3, 9, 25, 101, DateTimeKind.Local).AddTicks(4832),
                            isDelivered = false,
                            isPaid = true,
                            paidAt = new DateTime(2023, 2, 24, 3, 9, 25, 101, DateTimeKind.Local).AddTicks(4847),
                            paymentMethod = "PayPal",
                            paymentResult = "Success",
                            shippingPrice = 100.0,
                            taxPrice = 100.0,
                            totalPrice = 100.0
                        },
                        new
                        {
                            Id = "2",
                            UserId = "2",
                            deliveredAt = new DateTime(2023, 2, 24, 3, 9, 25, 101, DateTimeKind.Local).AddTicks(4849),
                            isDelivered = false,
                            isPaid = true,
                            paidAt = new DateTime(2023, 2, 24, 3, 9, 25, 101, DateTimeKind.Local).AddTicks(4850),
                            paymentMethod = "PayPal",
                            paymentResult = "Success",
                            shippingPrice = 100.0,
                            taxPrice = 100.0,
                            totalPrice = 100.0
                        },
                        new
                        {
                            Id = "3",
                            UserId = "3",
                            deliveredAt = new DateTime(2023, 2, 24, 3, 9, 25, 101, DateTimeKind.Local).AddTicks(4851),
                            isDelivered = false,
                            isPaid = true,
                            paidAt = new DateTime(2023, 2, 24, 3, 9, 25, 101, DateTimeKind.Local).AddTicks(4851),
                            paymentMethod = "PayPal",
                            paymentResult = "Success",
                            shippingPrice = 100.0,
                            taxPrice = 100.0,
                            totalPrice = 100.0
                        });
                });

            modelBuilder.Entity("eshopWebAPI.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountInStock")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumReviews")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Brand = "Nike",
                            Category = "Men",
                            CountInStock = 5,
                            Description = "Converse",
                            Image = "",
                            Name = "All Star",
                            NumReviews = 4,
                            Price = 100.0,
                            Rating = 5.0,
                            UserId = "1"
                        },
                        new
                        {
                            Id = "2",
                            Brand = "Nike",
                            Category = "Men",
                            CountInStock = 5,
                            Description = "Converse",
                            Image = "",
                            Name = "All Star",
                            NumReviews = 4,
                            Price = 100.0,
                            Rating = 5.0,
                            UserId = "2"
                        },
                        new
                        {
                            Id = "3",
                            Brand = "Nike",
                            Category = "Men",
                            CountInStock = 5,
                            Description = "Converse",
                            Image = "",
                            Name = "All Star",
                            NumReviews = 4,
                            Price = 100.0,
                            Rating = 5.0,
                            UserId = "3"
                        });
                });

            modelBuilder.Entity("eshopWebAPI.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            FirstName = "Abel",
                            LastName = "Masingita"
                        },
                        new
                        {
                            Id = "2",
                            FirstName = "Hlongwani",
                            LastName = "Masingita"
                        },
                        new
                        {
                            Id = "3",
                            FirstName = "Masingita",
                            LastName = "Masingita"
                        });
                });

            modelBuilder.Entity("eshopWebAPI.Models.Order", b =>
                {
                    b.HasOne("eshopWebAPI.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eshopWebAPI.Models.Product", b =>
                {
                    b.HasOne("eshopWebAPI.Models.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eshopWebAPI.Models.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
